{"timestamp":"2025-09-22T16:31:09.440803","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-22T16:31:09.446333","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/API_POSTGRE.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-22T16:31:09.623435Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:31:09.624391Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:31:09.625241Z","level":"info","event":"Current task name:check_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:31:09.625628Z","level":"info","event":"Dag name:API_POSTGRE","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:31:13.535887Z","level":"info","event":"Number of columns in data: 21","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:31:13.698963","level":"info","event":"Done. Returned value was: dags/data/uber-data.csv","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-22T16:31:13.700200","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01997242-0b0c-7337-9825-99781c84dbf5'), task_id='check_data', dag_id='API_POSTGRE', run_id='manual__2025-09-22T16:29:14.723133+00:00', try_number=1, map_index=-1, hostname='65b971fdbed4', context_carrier={}, task=<Task(PythonOperator): check_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 22, 16, 31, 7, 555660, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/API_POSTGRE/runs/manual__2025-09-22T16%3A29%3A14.723133%2B00%3A00/tasks/check_data?try_number=1')","logger":"task"}
{"timestamp":"2025-09-22T16:31:14.020672Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:31:14.023265Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:31:14.023988Z","level":"info","event":"Task operator:<Task(PythonOperator): check_data>","chan":"stdout","logger":"task"}
