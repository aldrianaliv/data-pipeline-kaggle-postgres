{"timestamp":"2025-09-22T17:08:21.113343","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-22T17:08:21.115311","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/API_POSTGRE.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-22T17:08:21.386578Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T17:08:21.402234Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T17:08:21.418168Z","level":"info","event":"Current task name:load_csv_to_stg","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T17:08:21.434187Z","level":"info","event":"Dag name:API_POSTGRE","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T17:08:21.597552Z","level":"info","event":"dags/data/uber-data.csv","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T17:08:21.597098","level":"info","event":"Running copy expert: \n        COPY STG.uber_data\n        FROM STDIN\n        WITH CSV HEADER\n    , filename: dags/data/uber-data.csv","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-09-22T17:08:21.668045","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `get` on Connection from sdk(`airflow.sdk.Connection`) instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-22T17:08:21.823832","level":"info","event":"Connection Retrieved '***sql_conn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-22T17:08:25.040836Z","level":"info","event":"Data CSV berhasil dimuat ke STG.uber_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T17:08:25.040398","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-22T17:08:31.108158","level":"error","event":"Top level error","logger":"task","error_detail":[{"exc_type":"AirflowRuntimeError","exc_value":"API_SERVER_ERROR: {'status_code': 409, 'message': 'Server returned error', 'detail': {'detail': {'reason': 'invalid_state', 'message': 'TI was not in the running state so it cannot be updated', 'previous_state': 'success'}}}","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1351,"name":"main"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":999,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/comms.py","lineno":204,"name":"send"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/comms.py","lineno":264,"name":"_get_response"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/comms.py","lineno":251,"name":"_from_frame"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-09-22T17:08:31.241364Z","level":"warning","event":"Process exited abnormally","exit_code":1,"logger":"task"}
