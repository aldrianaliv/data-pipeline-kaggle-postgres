{"timestamp":"2025-09-23T06:59:19.841228","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-23T06:59:19.842196","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/API_POSTGRE.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-23T06:59:20.292463Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-23T06:59:20.305359Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-23T06:59:20.307060Z","level":"info","event":"Current task name:create_sor_table_uber_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-23T06:59:20.308187Z","level":"info","event":"Dag name:API_POSTGRE","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-23T06:59:20.291842","level":"info","event":"Executing: \n            CREATE TABLE IF NOT EXISTS SOR.uber_ride (\n            booking_date DATE,\n            booking_time TIME,\n            booking_id VARCHAR(50) UNIQUE,\n            booking_status VARCHAR(50),\n            customer_id VARCHAR(50) UNIQUE,\n            vehicle_type VARCHAR(50),\n            pickup_location VARCHAR(100),\n            drop_location VARCHAR(100),\n            avg_vtat DECIMAL,\n            avg_ctat DECIMAL,\n            cancelled_rides_by_customer DECIMAL,\n            reason_for_cancelling_by_customer VARCHAR(255),\n            cancelled_rides_by_driver DECIMAL,\n            driver_cancellation_reason VARCHAR(255),\n            incomplete_rides DECIMAL,\n            incomplete_rides_reason VARCHAR(255),\n            booking_value DECIMAL,\n            ride_distance DECIMAL,\n            driver_ratings DECIMAL,\n            customer_rating DECIMAL,\n            payment_method VARCHAR(50)\n            );\n            ","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator"}
{"timestamp":"2025-09-23T06:59:20.317430","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `get` on Connection from sdk(`airflow.sdk.Connection`) instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-23T06:59:20.409771","level":"info","event":"Connection Retrieved '***sql_conn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-23T06:59:20.494368","level":"info","event":"Connection Retrieved '***sql_conn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-23T06:59:20.793074","level":"info","event":"Running statement: \n            CREATE TABLE IF NOT EXISTS SOR.uber_ride (\n            booking_date DATE,\n            booking_time TIME,\n            booking_id VARCHAR(50) UNIQUE,\n            booking_status VARCHAR(50),\n            customer_id VARCHAR(50) UNIQUE,\n            vehicle_type VARCHAR(50),\n            pickup_location VARCHAR(100),\n            drop_location VARCHAR(100),\n            avg_vtat DECIMAL,\n            avg_ctat DECIMAL,\n            cancelled_rides_by_customer DECIMAL,\n            reason_for_cancelling_by_customer VARCHAR(255),\n            cancelled_rides_by_driver DECIMAL,\n            driver_cancellation_reason VARCHAR(255),\n            incomplete_rides DECIMAL,\n            incomplete_rides_reason VARCHAR(255),\n            booking_value DECIMAL,\n            ride_distance DECIMAL,\n            driver_ratings DECIMAL,\n            customer_rating DECIMAL,\n            payment_method VARCHAR(50)\n            );\n            , parameters: None","logger":"airflow.task.hooks.airflow.providers.***.hooks.***.PostgresHook"}
{"timestamp":"2025-09-23T06:59:20.844988","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"InvalidSchemaName","exc_value":"schema \"sor\" does not exist\nLINE 2:             CREATE TABLE IF NOT EXISTS SOR.uber_ride (\n                                               ^\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":920,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1215,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/operators/sql.py","lineno":312,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py","lineno":767,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py","lineno":815,"name":"_run_command"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-09-23T06:59:20.855766Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-23T06:59:20.859608Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-23T06:59:20.860298Z","level":"info","event":"Task:<Task(SQLExecuteQueryOperator): create_sor_table_uber_data>","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-23T06:59:20.860784Z","level":"info","event":"Failure caused by schema \"sor\" does not exist","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-23T06:59:20.885159Z","level":"info","event":"LINE 2:             CREATE TABLE IF NOT EXISTS SOR.uber_ride (","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-23T06:59:20.892571Z","level":"info","event":"                                               ^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-23T06:59:20.897395Z","level":"info","event":"","chan":"stdout","logger":"task"}
