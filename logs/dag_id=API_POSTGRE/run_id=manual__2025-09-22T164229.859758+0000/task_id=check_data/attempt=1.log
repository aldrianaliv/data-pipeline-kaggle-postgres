{"timestamp":"2025-09-22T16:43:43.057787","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-22T16:43:43.059067","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/API_POSTGRE.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-22T16:43:43.631771Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:43:43.634001Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:43:43.637754Z","level":"info","event":"Current task name:check_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:43:43.638552Z","level":"info","event":"Dag name:API_POSTGRE","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:43:48.731911Z","level":"info","event":"Number of columns in data: 21","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:43:48.857550","level":"info","event":"Done. Returned value was: dags/data/uber-data.csv","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-22T16:43:48.858201","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199724e-2d1e-7d0a-860f-90128f0ff602'), task_id='check_data', dag_id='API_POSTGRE', run_id='manual__2025-09-22T16:42:29.859758+00:00', try_number=1, map_index=-1, hostname='65b971fdbed4', context_carrier={}, task=<Task(PythonOperator): check_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 22, 16, 43, 38, 460402, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/API_POSTGRE/runs/manual__2025-09-22T16%3A42%3A29.859758%2B00%3A00/tasks/check_data?try_number=1')","logger":"task"}
{"timestamp":"2025-09-22T16:43:49.258438Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:43:49.268259Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:43:49.269597Z","level":"info","event":"Task operator:<Task(PythonOperator): check_data>","chan":"stdout","logger":"task"}
