{"timestamp":"2025-09-22T16:44:11.106593","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-22T16:44:11.107585","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/API_POSTGRE.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-22T16:44:11.469282Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:44:11.470195Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:44:11.470699Z","level":"info","event":"Current task name:create_stg_table_uber_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:44:11.472384Z","level":"info","event":"Dag name:API_POSTGRE","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:44:13.609797","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `get` on Connection from sdk(`airflow.sdk.Connection`) instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-22T16:44:13.653688","level":"info","event":"Connection Retrieved '***sql_conn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-22T16:44:13.935670","level":"info","event":"Running statement: \n    CREATE TABLE IF NOT EXISTS STG.uber_data (\n        \"Date\" TEXT,\n    \"Time\" TEXT,\n    \"Booking ID\" TEXT,\n    \"Booking Status\" TEXT,\n    \"Customer ID\" TEXT,\n    \"Vehicle Type\" TEXT,\n    \"Pickup Location\" TEXT,\n    \"Drop Location\" TEXT,\n    \"Avg VTAT\" TEXT,\n    \"Avg CTAT\" TEXT,\n    \"Cancelled Rides by Customer\" TEXT,\n    \"Reason for cancelling by Customer\" TEXT,\n    \"Cancelled Rides by Driver\" TEXT,\n    \"Driver Cancellation Reason\" TEXT,\n    \"Incomplete Rides\" TEXT,\n    \"Incomplete Rides Reason\" TEXT,\n    \"Booking Value\" TEXT,\n    \"Ride Distance\" TEXT,\n    \"Driver Ratings\" TEXT,\n    \"Customer Rating\" TEXT,\n    \"Payment Method\" TEXT\n    );\n    , parameters: None","logger":"airflow.task.hooks.airflow.providers.***.hooks.***.PostgresHook"}
{"timestamp":"2025-09-22T16:44:13.965678Z","level":"info","event":"STG.uber_data table created with columns: ['Date', 'Time', 'Booking ID', 'Booking Status', 'Customer ID', 'Vehicle Type', 'Pickup Location', 'Drop Location', 'Avg VTAT', 'Avg CTAT', 'Cancelled Rides by Customer', 'Reason for cancelling by Customer', 'Cancelled Rides by Driver', 'Driver Cancellation Reason', 'Incomplete Rides', 'Incomplete Rides Reason', 'Booking Value', 'Ride Distance', 'Driver Ratings', 'Customer Rating', 'Payment Method']","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:44:14.027415","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-22T16:44:14.208050Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:44:14.242535Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T16:44:14.259148Z","level":"info","event":"Task operator:<Task(PythonOperator): create_stg_table_uber_data>","chan":"stdout","logger":"task"}
